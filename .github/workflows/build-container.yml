name: Build Container Images
on:
  push:

jobs:
  matrix:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set matrix
        id: matrix
        run: |
          # Find all Dockerfiles in the repository and build a JSON matrix
          files=$(find . -name Dockerfile -print0 | sort -z | tr '\0' '\n')
          # Strip the Dockerfile from the end of the path
          files=$(echo "$files" | sed -E 's|/Dockerfile$||')
          printf "Found directories with Dockerfiles:\n$files\n"
          matrix=$(jq -n --arg files "$files" '{include: ($files | split("\n") | map(select(. != "")) | map({imageName: . | ltrimstr("./"), dirName: .}))}')
          echo "::set-output name=matrix::$(echo "$matrix" | jq -r @json)"

  check-matrix:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .

  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.imageName }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ github.ref_type == 'tag' || github.ref_name == 'main' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.dirName }}
          file: "${{ matrix.dirName }}/Dockerfile"
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref_type == 'tag' || github.ref_name == 'main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
